apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'

cordapp {
    targetPlatformVersion corda_platform_version
    minimumPlatformVersion corda_platform_version
    contract {
        name "Template Contracts"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }

    signing {
        enabled false
    }

}

sourceCompatibility = 1.8

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // Corda dependencies.
    cordaCompile "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaCompile "$corda_core_release_group:corda:$corda_core_release_version"

    cordaRuntime "$corda_release_group:corda-node-api:$corda_release_version"

    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"

    compile("org.web3j:core:4.8.5"){
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
//        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    compile "org.web3j:quorum:4.8.4"
//    compile "com.squareup.okhttp3:okhttp:4.9.1"

}



tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}